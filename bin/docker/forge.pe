#! /usr/bin/env fontforge
# usage: bin/forge.pe
#   - positions and scales glyphs
#   - generates bold weights
#   - outputs sfd, ttfs for each

OFL_NOTICE="Copyright 2017 The Brass Mono Project Authors (github.com/fonsecapeter/brass_mono)";
Open("src/BrassMono.svg");
SetOS2Value("VendorId", "FNSA");
SetOS2Value("Weight", 400);
SetOS2Value("FSType", 0);
SetOS2Value("Panose", [2,0,5,9,0,0,0,0,0,0]);
# SetIsFixedPitch(1);
SetTTFName(0x409, 14, "http://scripts.sil.org/OFL");
SetTTFName(0x409, 13, "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL");

SetOS2Value("TypoAscentIsOffset", 0);
SetOS2Value("TypoDescentIsOffset", 0);
SetOS2Value("HHeadAscentIsOffset", 0);
SetOS2Value("HHeadDescentIsOffset", 0);
SetOS2Value("WinAscentIsOffset", 0);
SetOS2Value("WinDescentIsOffset", 0);

SetOS2Value("TypoAscent", 745);    # Ascender
SetOS2Value("TypoDescent", -255);  # TypoAscent - UPM
SetOS2Value("TypoLineGap", 250);   # 0.25 * UPM
SetOS2Value("HHeadAscent", 745);   # TypoAscent
SetOS2Value("HHeadDescent", -255); # TypoDescent
SetOS2Value("WinAscent", 800);     # Font bbox yMax
SetOS2Value("WinDescent", -200);   # Font bbox yMin

Reencode("unicode");
# make these worth selecting
# space, nbsp, .null, nomarkingreturn, en-space, zero-width space, thin-space
SelectSingletons(0u0020, 0u00A0, 0u0000, 0u000D, 0u2002, 0u200B, 0u2009);
SetWidth(560);

SelectWorthOutputting();
Transform(100, 0, 0, 100, 0, -20000);  # Move down 200 units
CenterInWidth();
SetWidth(560);

# add diacritics (manual ones didn't come out right automatically)
# acute accent: aeiou (manually do y)
SelectSingletons(0u00E1, 0u00E9, 0u00ED, 0u00F3, 0u00FA);
BuildAccented();
# acute accent: AEIOUY
SelectSingletons(0u00C1, 0u00C9, 0u00CD, 0u00D3, 0u00DA, 0u00DD);
BuildAccented();
# tilde accent: ano
SelectSingletons(0u00E3, 0u00F1, 0u00F5);
BuildAccented();
# tilde accent: AO (manually do N)
SelectSingletons(0u00C3, 0u00D5);
BuildAccented();
# umlaut: aeiou
SelectSingletons(0u00E4, 0u00EB, 0u00EF, 0u00F6, 0u00FC);
BuildAccented();
# umlaut: AEIOU
SelectSingletons(0u00C4, 0u00CB, 0u00CF, 0u00D6, 0u00DC);
BuildAccented();
# cedilha: cC
SelectSingletons(0u00E7, 0u00C7);
BuildAccented();
# grave accent, aeiou
SelectSingletons(0u00E0, 0u00E8, 0u00EC, 0u00F2, 0u00F9);
BuildAccented();
# grave accent, AEIOU
SelectSingletons(0u00C0, 0u00C8, 0u00CC, 0u00D2, 0u00D9);
BuildAccented();
# circumflex, aeiou
SelectSingletons(0u00E2, 0u00EA, 0u00EE, 0u00F4, 0u00FB);
BuildAccented();
# circumflex, AEIOU
SelectSingletons(0u00C2, 0u00CA, 0u00CE, 0u00D4, 0u00DB);
BuildAccented();
# rung above: aA
SelectSingletons(0u00E5, 0u00C5);
BuildAccented();

SelectWorthOutputting();
SetWidth(560);
CorrectDirection();
Reencode("compacted");

# SetFontOrder(2);
# CorrectDirection();
# RemoveOverlap();
# Simplify();
# AddExtrema();
# RoundToInt();

SelectSingletons(0u251C, 0u250C, 0u2514); # ├ ┌ └
Transform(100, 0, 0, 100, 11400, 0);     # Move right 114 units
SetWidth(560);
SelectSingletons(0u2524, 0u2510, 0u2518); # ┤ ┐ ┘
Transform(100, 0, 0, 100, -11400, 0);    # Move left 114 units
SetWidth(560);

SetFontNames("BrassMono-Regular", "Brass Mono", "Brass Mono Regular", "Regular", OFL_NOTICE);
regular_file="BrassMono-Regular.sfd";
Save("dist/forge/" + regular_file);
Generate("dist/ttx/" + regular_file:r + ".ttf");
Close();

Open("dist/forge/" + regular_file);
SelectWorthOutputting();
SetFontNames("BrassMono-Bold", "Brass Mono", "Brass Mono Bold", "Bold", OFL_NOTICE);
SetOS2Value("Weight", 700);
ExpandStroke(30, 1, 1, 0, 1);
# RemoveOverlap();
# Simplify();
# AddExtrema();
# RoundToInt();
bold_file="BrassMono-Bold.sfd";
Save("dist/forge/" + bold_file);
Save("dist/forge/" + bold_file:r + "Italic.sfd");
Generate("dist/ttx/" + bold_file:r + ".ttf");
Close();
